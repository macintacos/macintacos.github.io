{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-chronoblog/src/content-bottom.mdx","webpack:///./src/gatsby-theme-chronoblog/post-footer.mdx","webpack:///./node_modules/gatsby-theme-chronoblog/src/components/post/post.js","webpack:///./node_modules/gatsby-theme-chronoblog/src/templates/post.js"],"names":["makeShortcode","name","props","console","warn","FeedSearch","Tags","FeedItems","layoutProps","_frontmatter","MDXLayout","MDXContent","components","mdxType","isMDXComponent","AuthorBanner","PostTitle","frontmatter","data","mdx","title","h1","PostContent","body","PostFooter","siteMetadata","useSiteMetadata","sx","mt","mb","PostFooterMdx","Post","fromFrontmatter","fromExcerpt","description","excerpt","imagePath","get","slug","fields","image","type","date","tags","marginTop","postQuery"],"mappings":"kaAKO,IAEDA,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,oBAASC,KAGZG,EAAaL,EAAc,cAC3BM,EAAON,EAAc,QACrBO,EAAYP,EAAc,aAC1BQ,EAAc,CAClBC,aAX0B,IAatBC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGV,E,oIACF,mBACD,OAAO,cAACQ,EAAD,KAAeF,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,cAC5E,yBACA,cAACR,EAAD,CAAYQ,QAAQ,eACpB,cAACP,EAAD,CAAMO,QAAQ,SACd,cAACN,EAAD,CAAWM,QAAQ,eAKvBF,EAAWG,gBAAiB,G,qZC3BrB,IAEeb,EAKhBc,GALgBd,EAKa,eALL,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,oBAASC,KAIZM,EAAc,CAClBC,aAT0B,IAWtBC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGV,E,oIACF,mBACD,OAAO,cAACQ,EAAD,KAAeF,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,cAC5E,cAACE,EAAD,CAAcF,QAAQ,kBAK1BF,EAAWG,gBAAiB,E,gECXtBE,EAAY,SAAC,GAIZ,IAFIC,EAEL,EAHJC,KACEC,IAAOF,YAGT,OACE,uBACGA,EAAYG,MAAQ,YAAC,IAAOC,GAAR,KAAYJ,EAAYG,OAAqB,KAKlEE,EAAc,SAAC,GAId,IAFIC,EAEL,EAHJL,KACEC,IAAOI,KAGT,OAAO,YAAC,cAAD,KAAcA,IASjBC,EAAa,WACjB,IAAMC,EAAeC,cACrB,OACE,mBAAKC,GAAI,CAAEC,GAAI,OAAQC,GAAI,SACxBC,GAAmC,KAAlBA,EAChB,YAAC,EAAD,CAAeL,aAAcA,IAE7B,KAiDOM,EA3CK,SAAC,GAAc,IAnBLC,EAAiBC,EAmBxBf,EAAW,EAAXA,KACfgB,GApBsBF,EAqB1Bd,EAAKC,IAAIF,YAAYiB,YArBsBD,EAsB3Cf,EAAKC,IAAIgB,QArBPH,GAAuC,KAApBA,EAA+BA,EAClDC,GAA+B,KAAhBA,EAA2BA,EACvC,IAqBDG,EAAYC,IAChBnB,EACA,kDACA,IAGF,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEE,MAAOF,EAAKC,IAAIF,YAAYG,MAC5BkB,KAAMpB,EAAKC,IAAIoB,OAAOD,KACtBJ,YAAaA,EACbM,MAAOJ,IAET,wBACE,2BACE,0BACE,YAAC,IAAD,CAAYlB,KAAMA,EAAKC,IAAKsB,KAAK,SACjC,YAAC,EAAD,CAAWvB,KAAMA,IACjB,YAAC,IAAD,CAAMwB,KAAMxB,EAAKC,IAAIF,YAAYyB,OACjC,mBAAKf,GAAI,CAAEC,GAAI,GAAIC,GAAI,IACrB,YAAC,IAAD,CAAMY,KAAK,OAAOE,KAAMzB,EAAKC,IAAIF,YAAY0B,SAGjD,YAAC,EAAD,CAAazB,KAAMA,IACnB,sBAAQS,GAAI,CAAEiB,UAAW,SACvB,YAAC,IAAD,CAAMH,KAAK,OAAOE,KAAMzB,EAAKC,IAAIF,YAAY0B,OAC7C,YAAC,EAAD,SAIN,yBACE,YAAC,IAAD,SC1FR,0CAEeZ,gBAEFc,EAAS","file":"component---node-modules-gatsby-theme-chronoblog-src-templates-post-js-6e532b6fb5e1477b2685.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst FeedSearch = makeShortcode(\"FeedSearch\");\nconst Tags = makeShortcode(\"Tags\");\nconst FeedItems = makeShortcode(\"FeedItems\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <hr />\n    <FeedSearch mdxType=\"FeedSearch\" />\n    <Tags mdxType=\"Tags\" />\n    <FeedItems mdxType=\"FeedItems\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AuthorBanner = makeShortcode(\"AuthorBanner\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <AuthorBanner mdxType=\"AuthorBanner\"></AuthorBanner>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport get from 'lodash/get';\nimport { jsx, Styled } from 'theme-ui';\n\n// @ts-ignore\nimport ContentBottomMdx from '../../content-bottom.mdx';\nimport useSiteMetadata from '../../hooks/use-site-metadata';\n// @ts-ignore\nimport PostFooterMdx from '../../post-footer.mdx';\nimport CoverImage from '../cover-image';\nimport Date from '../date';\nimport Layout from '../layout';\nimport SEO from '../seo';\nimport Tags from '../tags';\n\nconst PostTitle = ({\n  data: {\n    mdx: { frontmatter }\n  }\n}) => {\n  return (\n    <div>\n      {frontmatter.title ? <Styled.h1>{frontmatter.title}</Styled.h1> : ''}\n    </div>\n  );\n};\n\nconst PostContent = ({\n  data: {\n    mdx: { body }\n  }\n}) => {\n  return <MDXRenderer>{body}</MDXRenderer>;\n};\n\nconst getDescriptionForSeo = (fromFrontmatter, fromExcerpt) => {\n  if (fromFrontmatter && fromFrontmatter !== '') return fromFrontmatter;\n  if (fromExcerpt && fromExcerpt !== '') return fromExcerpt;\n  return '';\n};\n\nconst PostFooter = () => {\n  const siteMetadata = useSiteMetadata();\n  return (\n    <div sx={{ mt: '30px', mb: '30px' }}>\n      {PostFooterMdx && PostFooterMdx !== '' ? (\n        <PostFooterMdx siteMetadata={siteMetadata} />\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nexport const Post = ({ data }) => {\n  const description = getDescriptionForSeo(\n    data.mdx.frontmatter.description,\n    data.mdx.excerpt\n  );\n  const imagePath = get(\n    data,\n    'mdx.frontmatter.cover.childImageSharp.fluid.src',\n    ''\n  );\n  //\n  return (\n    <Layout>\n      <SEO\n        title={data.mdx.frontmatter.title}\n        slug={data.mdx.fields.slug}\n        description={description}\n        image={imagePath}\n      />\n      <main>\n        <article>\n          <header>\n            <CoverImage data={data.mdx} type=\"post\" />\n            <PostTitle data={data} />\n            <Date date={data.mdx.frontmatter.date} />\n            <div sx={{ mt: 20, mb: 3 }}>\n              <Tags type=\"item\" tags={data.mdx.frontmatter.tags} />\n            </div>\n          </header>\n          <PostContent data={data} />\n          <footer sx={{ marginTop: '20px' }}>\n            <Tags type=\"item\" tags={data.mdx.frontmatter.tags} />\n            <PostFooter />\n          </footer>\n        </article>\n      </main>\n      <aside>\n        <ContentBottomMdx />\n      </aside>\n    </Layout>\n  );\n};\n\nexport default Post;\n","import { graphql } from 'gatsby';\n\nimport Post from '../components/post';\n\nexport default Post;\n\nexport const postQuery = graphql`\n  query($id: String!) {\n    mdx(id: { eq: $id }) {\n      id\n      excerpt\n      frontmatter {\n        title\n        date\n        description\n        tags\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 768, quality: 90) {\n              ...GatsbyImageSharpFluid_withWebp\n              presentationWidth\n              presentationHeight\n              src\n            }\n            resize(width: 768) {\n              src\n            }\n          }\n        }\n      }\n      fields {\n        slug\n      }\n      body\n    }\n  }\n`;\n"],"sourceRoot":""}