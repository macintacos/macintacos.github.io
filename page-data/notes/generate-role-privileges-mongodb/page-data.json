{"componentChunkName":"component---node-modules-gatsby-theme-chronoblog-src-templates-note-js","path":"/notes/generate-role-privileges-mongodb/","result":{"data":{"mdx":{"id":"638d5112-102b-5b93-906b-e14daded0fbf","excerpt":"The following is valid syntax as of MongoDB 4.2.1:","frontmatter":{"title":"Script to Generate Role Privileges in MongoDB Databases","date":"2020-01-05T00:00:00.000Z","tags":["note","project"],"cover":null},"fields":{"slug":"/notes/generate-role-privileges-mongodb/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Script to Generate Role Privileges in MongoDB Databases\",\n  \"date\": \"2020-01-05T00:00:00.000Z\",\n  \"tags\": [\"note\", \"project\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The following is valid syntax as of MongoDB 4.2.1:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// columns output are:\\n// note the 3rd through 6th columns can say \\\"undefined\\\"\\n\\n/*\\n*\\n* role name\\n* role DB (always admim)\\n* true if resource is anyResource\\n* true if resource is cluster\\n* resource DB name\\n* resource collection name\\n* privilege action name\\n* privilege action name\\n* ...\\n*\\n* */\\n\\ndb.getSiblingDB(\\\"admin\\\").runCommand({ rolesInfo: 1, showBuiltinRoles: true, showPrivileges: true }).roles.forEach(function(role) {\\n    [].concat(role.privileges).concat(role.inheritedPrivileges).forEach(function(priv) {\\n        var csv =\\n          role.role +\\n          \\\",\\\" +\\n          role.db +\\n          \\\",\\\" +\\n          priv.resource.anyResource +\\n          \\\",\\\" +\\n          priv.resource.cluster +\\n          \\\",\\\" +\\n          priv.resource.db +\\n          \\\",\\\" +\\n          priv.resource.collection;\\n        priv.actions.forEach(function(action) {\\n          csv += \\\",\\\" + action;\\n        });\\n        print(csv);\\n      });\\n  });\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"638d5112-102b-5b93-906b-e14daded0fbf"}}}